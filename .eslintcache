[{"E:\\sakura\\sakura-front\\src\\reportWebVitals.js":"1","E:\\sakura\\sakura-front\\src\\App.js":"2","E:\\sakura\\sakura-front\\src\\index.js":"3","E:\\sakura\\sakura-front\\src\\fireabase_config.js":"4","E:\\sakura\\sakura-front\\src\\dash\\dash.js":"5","E:\\sakura\\sakura-front\\src\\noti\\noti.js":"6","E:\\sakura\\sakura-front\\src\\land\\land.js":"7","E:\\sakura\\sakura-front\\src\\land\\addLink.js":"8","E:\\sakura\\sakura-front\\src\\analytics\\analytics.js":"9"},{"size":362,"mtime":1609566256278,"results":"10","hashOfConfig":"11"},{"size":32034,"mtime":1614618709631,"results":"12","hashOfConfig":"11"},{"size":286,"mtime":1610816493357,"results":"13","hashOfConfig":"11"},{"size":383,"mtime":1610825191196,"results":"14","hashOfConfig":"11"},{"size":20545,"mtime":1614363756402,"results":"15","hashOfConfig":"11"},{"size":404,"mtime":1611124321512,"results":"16","hashOfConfig":"11"},{"size":36356,"mtime":1614623537427,"results":"17","hashOfConfig":"11"},{"size":4657,"mtime":1611250037522,"results":"18","hashOfConfig":"11"},{"size":63091,"mtime":1614622904900,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ybafzj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"E:\\sakura\\sakura-front\\src\\reportWebVitals.js",[],["43","44"],"E:\\sakura\\sakura-front\\src\\App.js",["45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"E:\\sakura\\sakura-front\\src\\index.js",[],"E:\\sakura\\sakura-front\\src\\fireabase_config.js",[],"E:\\sakura\\sakura-front\\src\\dash\\dash.js",["80","81","82","83","84","85","86","87","88","89","90","91","92"],"import axios from 'axios';\r\nimport React, { useState,useEffect  } from 'react';\r\nimport {Dropdown,Button,Alert,Spinner,Tab,Modal,Tabs,Row,Nav,Col} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style/dash.css';\r\nimport '../App.css';\r\nimport qs from 'qs';\r\nimport gog_ico from '.././assets/logo/gog.png';\r\n\r\n\r\nfunction ChangePassModal(props){\r\n     return(\r\n         <Modal  {...props} size=\"300px\" aria-labelledby=\"contained-modal-title-vcenter\"  className='pass_chnage_modal_bdy_main_cont'>\r\n           <Modal.Body id='pass_chnage_modal_bdy_cont' >\r\n                     <div id='pass_chnage_modal_bdy_cont_tit_cont'>Change Password</div>\r\n                     <div className='app_setting_main_bdy_tit_main_sub_opt_cont'>\r\n                             <div className='app_setting_main_bdy_tit_main_sub_opt_cont_tit'>Current Password</div>\r\n                             <input type='password' placeholder='Enter current password' className='app_setting_main_bdy_tit_main_sub_opt_cont_data'></input>\r\n                     </div>\r\n                     <div className='app_setting_main_bdy_tit_main_sub_opt_cont'>\r\n                             <div className='app_setting_main_bdy_tit_main_sub_opt_cont_tit'>New Password</div>\r\n                             <input type='password' placeholder='Enter new password' className='app_setting_main_bdy_tit_main_sub_opt_cont_data'></input>\r\n                     </div>\r\n                     <div className='app_setting_main_bdy_tit_main_sub_opt_cont'>\r\n                             <div className='app_setting_main_bdy_tit_main_sub_opt_cont_tit'>Confirm Password</div>\r\n                             <input type='password' placeholder='Enter password again' className='app_setting_main_bdy_tit_main_sub_opt_cont_data'></input>\r\n                     </div>\r\n                     <div className='app_setting_main_bdy_tit_main_forg_lnk_cont'>\r\n                     <a href='#' className='app_setting_main_bdy_tit_main_forg_lnk'>\r\n                         Can't remember password?\r\n                         </a>\r\n                         </div>\r\n                         <Button className='app_setting_main_bdy_tit_main_sub_butt_cont' >Confirm</Button>\r\n           </Modal.Body>\r\n         </Modal>\r\n     );\r\n   }\r\n   \r\nfunction DecactivateModal(props){\r\n     return(\r\n         <Modal  {...props} size=\"300px\" aria-labelledby=\"contained-modal-title-vcenter\"  className='pass_chnage_modal_bdy_main_cont'>\r\n           <Modal.Body id='pass_chnage_modal_bdy_cont' >\r\n                     <div id='pass_chnage_modal_bdy_cont_tit_cont'>Deactivate Account</div>\r\n                     <div className='app_setting_main_bdy_tit_main_sub_opt_cont'>\r\n                             <div className='app_setting_main_bdy_tit_main_sub_opt_cont_tit'>Current Password</div>\r\n                             <input type='password' placeholder='Enter current password' className='app_setting_main_bdy_tit_main_sub_opt_cont_data'></input>\r\n                     </div>\r\n                     <Alert variant=\"danger\" className='dec_acc_modal_alrt_cont'>\r\n                         Deactivated account cannot be reactivated again!\r\n                     </Alert>\r\n                 <Button className='app_setting_main_bdy_tit_main_sub_butt_cont' variant='danger'>Confirm deactivate account</Button>\r\n           </Modal.Body>\r\n         </Modal>\r\n     );\r\n   }\r\n     \r\nexport default class Dashboard extends React.Component{\r\n     constructor(props){\r\n       super(props);\r\n       this.state = {\r\n           changePassModalVisi:false,\r\n           deacAccModalVisi:false,\r\n           user_name:null,\r\n           user_email:null,\r\n           user_comp_name:null,\r\n           user_num:null,\r\n           errCode:false,\r\n           errMessage:\"NULL ERROR 00\",\r\n           isLoading:false,\r\n           isSucess:false,\r\n           isGoogleOwn:false,\r\n           isEmailNoti:0,\r\n         }        \r\n     this.getUserInfo = this.getUserInfo.bind(this)  ;\r\n     this.setError = this.setError.bind(this);\r\n     props.setPage(3);\r\n     }\r\n\r\n     setError(val,str_dat){\r\n        this.setState({\r\n            errCode:val,\r\n            errMessage:str_dat\r\n        });\r\n     }\r\n     \r\n     onNameChange(event) {\r\n        this.setState({user_name: event.target.value})\r\n      }\r\n      onCompNameChange(event) {\r\n        this.setState({user_comp_name: event.target.value})\r\n      }\r\n      onNumChange(event) {\r\n        this.setState({user_num: event.target.value})\r\n      }\r\n     onEmailNotiChange(e) {\r\n        //console.log('value of checkbox : ', e.target.checked);\r\n        let fin_val = this.state.isEmailNoti===1?0:1;\r\n        console.log(\"email noti change for\"+fin_val);\r\n        let user={\r\n            uid:this.props.userID,\r\n            noti:fin_val,\r\n        }\r\n        this.updateEmailNoti(user);\r\n      }\r\n     componentWillMount(){\r\n        this.getUserInfo(this.props.userID);\r\n     }\r\n\r\n     async getUserInfo(user_id){\r\n          console.log(\"GET USER INFO INIT at UID\"+user_id);\r\n        let res = await axios(\"http://localhost:8080/getUserInfo/\", {\r\n            method: 'POST',\r\n            mode: 'no-cors',\r\n            cache: 'no-cache',\r\n            headers: {\r\n               'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            credentials: 'same-origin',\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            data: qs.stringify({UID:user_id})// body data type must match \"Content-Type\" header\r\n          }).then(res=>{\r\n           if(res.data===null||res.data==\"\"){\r\n             console.error(\"YES getUserInfo No user found\");\r\n           }\r\n           console.log(\"YES getUserInfo YES user found\"+JSON.stringify(res.data)); \r\n           this.setState({\r\n               user_name:res.data.user_name==null?\"FULL NAME\":res.data.user_name,\r\n               user_email:res.data.user_email==null?\"EMAIL ADDRESS\":res.data.user_email,\r\n               user_comp_name:res.data.user_comp_name==null?\"COMPANY NAME\":res.data.user_comp_name,\r\n               user_num:res.data.user_num==null?\"0000000000\":res.data.user_num,\r\n               isEmailNoti:res.data.user_email_noti,\r\n                isGoogleOwn:res.data.is_google_own\r\n            });\r\n           \r\n           \r\n          }).catch(err=>{console.log(err)\r\n             return(false);\r\n         });\r\n         return res;\r\n      }\r\n      async updateUserInfo(user){\r\n        console.log(\"GET USER INFO INIT at UID\"+user.uid);\r\n        this.setState({\r\n            isLoading:true,\r\n            errCode:false,\r\n        })\r\n        let res = await axios(\"http://localhost:8080/updateUserInfo/\", {\r\n          method: 'POST',\r\n          mode: 'no-cors',\r\n          cache: 'no-cache',\r\n          headers: {\r\n             'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n          credentials: 'same-origin',\r\n          redirect: 'follow', // manual, *follow, error\r\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n          data: qs.stringify(user)// body data type must match \"Content-Type\" header\r\n        }).then(res=>{\r\n            this.setState({\r\n                isLoading:false,\r\n                errCode:false,\r\n            })\r\n            console.log(\" \"+JSON.stringify(res.data)); \r\n            this.props.addNot(\"Profile Updated Successfully\",\"\");\r\n        }).catch(err=>{console.log(err)\r\n            this.setState({\r\n                isLoading:false,\r\n                errCode:false,\r\n                errMessage:err,\r\n            })\r\n            this.props.addNot(\"Error Occuured\",\"err\");\r\n            return(false);\r\n       });\r\n       return res;\r\n    }\r\n\r\n    async updateEmailNoti(user){\r\n        console.log(\"GET USER INFO INIT at UID\"+user.uid);\r\n        let res = await axios(\"http://localhost:8080/updateEmailNoti/\", {\r\n          method: 'POST',\r\n          mode: 'no-cors',\r\n          cache: 'no-cache',\r\n          headers: {\r\n             'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n          credentials: 'same-origin',\r\n          redirect: 'follow', // manual, *follow, error\r\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n          data: qs.stringify(user)// body data type must match \"Content-Type\" header\r\n        }).then(res=>{\r\n            console.log(\" \"+JSON.stringify(res.data)); \r\n            if(res.data.isUpdated===true){\r\n                this.setState({\r\n                    isEmailNoti:user.noti\r\n                })\r\n                this.props.addNot(\"Email Notification Changed\",\"\");\r\n            }\r\n\r\n        }).catch(err=>{\r\n            this.props.addNot(\"Email Notification Error Occurrred\",\"err\");\r\n            console.log(err)\r\n            return(false);\r\n       });\r\n       return res;\r\n    }\r\n\r\n      userUpdateSubmit(e){\r\n        e.preventDefault();\r\n        \r\n        let newUser = {\r\n            uid:this.props.userID,\r\n            un:this.state.user_name,\r\n            ucn:this.state.user_comp_name,\r\n            unum:this.state.user_num\r\n        }\r\n        \r\n        if(newUser.un.length<1){console.log(\"NAME TOO SMALL\"); this.setError(true,\"Name is too small\"); return;}\r\n        if(newUser.un.length>15){console.log(\"NAME TOO BIG\");  this.setError(true,\"Name is too big\"); return;}\r\n        if(newUser.unum.length<10){console.log(\"NUMBER TOO SMALL\");this.setError(true,\"Number is too small\");  return;}\r\n        if(newUser.unum.length>10){console.log(\"NUMBER TOO BIG\");this.setError(true,\"Number is too big\");  return;}\r\n        this.updateUserInfo(newUser);\r\n        console.log(\"INTI UPDATE USER DATA for \"+JSON.stringify(newUser));   \r\n    }\r\n   \r\n   render(){\r\n       return(\r\n         <div id='app_setting_main_bdy'>\r\n              <div id='app_setting_main_bdy_tit_main_cont'>\r\n                         <div>\r\n                         <div id='app_setting_main_bdy_tit_main_tit'>\r\n                         {/* <svg className='app_full_left_lnk_class_ico_2' viewBox='0 0 512 512'><title>Grid</title><rect x='48' y='48' width='176' height='176' rx='20' ry='20' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='32'/><rect x='288' y='48' width='176' height='176' rx='20' ry='20' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='32'/><rect x='48' y='288' width='176' height='176' rx='20' ry='20' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='32'/><rect x='288' y='288' width='176' height='176' rx='20' ry='20' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='32'/></svg> */}\r\n                         Setttings\r\n                         </div>\r\n                         </div>\r\n                         <div id='app_land_main_bdy_butt_cont'>\r\n                         </div>\r\n                         </div>\r\n           <ChangePassModal show={this.state.changePassModalVisi} onHide={()=>{this.setState({changePassModalVisi:false})}}></ChangePassModal>\r\n           <DecactivateModal show={this.state.deacAccModalVisi} onHide={()=>{this.setState({deacAccModalVisi:false})}}></DecactivateModal>\r\n               <div id='app_sett_main_main_bdy'>\r\n                \r\n                <Tabs defaultActiveKey=\"profile\" className=\"app_setting_tab_main_cont_class\"  id=\"app_setting_tab_main_cont\"  variant='pills'>\r\n                   <Tab eventKey=\"profile\" className='app_setting_tab_main_tab_1_main_cont' title=\"Profile\">\r\n                   <div className='app_setting_tab_main_tab_1_cont'>\r\n                           <div className='app_setting_tab_main_tab_1_cont_left'>\r\n                               <div className='app_sett_tab_cont_pro' >\r\n                               \r\n\r\n                               <div className='app_setting_tab_main_tab_1_cont_opt_class'>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_tit_clsas'>\r\n                                           Email Address\r\n                                       </div>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_data_txt_cont'>\r\n                                           <input className='app_setting_tab_main_tab_1_cont_opt_data_txt' disabled value={this.state.user_email} onChange={this.onNameChange.bind(this)}></input></div>\r\n                               </div>\r\n\r\n                                {this.state.isGoogleOwn==1?\r\n                                <div id='gog_sgn_meth_cont'>\r\n                                    <img src={gog_ico} id='gog_sgn_meth_cont_ico'></img>Google Sign-in Method\r\n                               </div>:\r\n                               <span>\r\n\r\n                               </span>\r\n                               }\r\n                                <form onSubmit={this.userUpdateSubmit.bind(this)}>\r\n\r\n                               <div className='app_setting_tab_main_tab_1_cont_opt_class'>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_tit_clsas'>\r\n                                           Full Name*\r\n                                       </div>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_data_txt_cont'>\r\n                                        <input type=\"text\" disabled={this.state.isLoading} className='app_setting_tab_main_tab_1_cont_opt_data_txt' value={this.state.user_name} onChange={this.onNameChange.bind(this)}></input></div>\r\n                               </div>\r\n                               \r\n                               <div className='app_setting_tab_main_tab_1_cont_opt_class'>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_tit_clsas'>\r\n                                           Mobile Phone number\r\n                                       </div>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_data_txt_cont'\r\n                                       ><input type=\"number\" disabled={this.state.isLoading} className='app_setting_tab_main_tab_1_cont_opt_data_txt' value={this.state.user_num} onChange={this.onNumChange.bind(this)}></input></div>\r\n                               </div>\r\n                               <div className='app_setting_tab_main_tab_1_cont_opt_class'>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_tit_clsas'>\r\n                                           Company Name\r\n                                       </div>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_data_txt_cont'>\r\n                                           <input type=\"text\" disabled={this.state.isLoading} className='app_setting_tab_main_tab_1_cont_opt_data_txt' value={this.state.user_comp_name} onChange={this.onCompNameChange.bind(this)}></input></div>\r\n                               </div>\r\n                               {\r\n                                        this.state.errCode===true?<div id='app_login_alrt_cont'>\r\n                                        <Alert variant=\"danger\">\r\n                                            {this.state.errMessage}\r\n                                        </Alert>\r\n                                    </div>:this.state.isSucess===true?<div id='app_login_alrt_cont'>\r\n                                        <Alert variant=\"success\">\r\n                                           Account Updated\r\n                                        </Alert>\r\n                                    </div>:<span></span>   \r\n                                    }\r\n                               <Button type='submit' className='app_sett_tab_sub_butt'disabled={this.state.isLoading}>{!this.state.isLoading===true?<span>Update Profile</span>:<Spinner id='app_sett_tab_sub_butt_spi' animation=\"border\" variant=\"light\" />}</Button>\r\n                               </form>\r\n\r\n                               </div>\r\n                               <div className='app_sett_tab_cont_pro' >\r\n                                       <div className='app_setting_tab_main_tab_1_cont_tit'>\r\n                                           Notification Settings\r\n                                       </div>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_class'>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_tit_clsas'>\r\n                                           Email Notification\r\n                                       </div>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_data_txt_cont'>\r\n                                           <span id='app_sett_email_chck_inp_txt'>You wont recieve email Notification</span>\r\n                                           <input id='app_sett_email_chck_inp' type=\"checkbox\" \r\n                                            checked={this.state.isEmailNoti==1?true:false}\r\n                                            onChange={this.onEmailNotiChange.bind(this)}\r\n                                            >\r\n                                            </input>\r\n                                           </div>\r\n                               </div>\r\n                               </div>\r\n                               </div>\r\n                               \r\n                       </div>\r\n                       \r\n                   </Tab>\r\n                   <Tab eventKey=\"sec\" title=\"Security\">\r\n                   <div className='app_setting_tab_main_tab_1_cont'>\r\n                           <div className='app_setting_tab_main_tab_1_cont_left'>\r\n                               <div className='app_sett_tab_cont_pro' >\r\n                               \r\n                               <div className='app_setting_tab_main_tab_1_cont_opt_class'>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_tit_clsas'>\r\n                                           Password Change\r\n                                       </div>\r\n                                       {this.state.isGoogleOwn==1?\r\n                                <div id='gog_sgn_meth_cont'>\r\n                                    <img src={gog_ico} id='gog_sgn_meth_cont_ico'></img>Managed By Google\r\n                               </div>:\r\n                                <div className='app_setting_tab_main_tab_1_cont_opt_data_txt_cont'><Button className='app_sett_tab_pass_chang_butt' variant=\"secondary\" onClick={() => { this.setState({changePassModalVisi :true}) }}>Change Password</Button></div>\r\n                               }\r\n                                \r\n                               </div>\r\n                           \r\n                               \r\n                               </div>\r\n                               <div className='app_sett_tab_cont_pro' >\r\n                                       <div className='app_setting_tab_main_tab_1_cont_tit'>\r\n                                           Account Settings\r\n                                       </div>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_class'>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_tit_clsas'>\r\n                                           Deactivate Account\r\n                                       </div>\r\n                                       <div className='app_setting_tab_main_tab_1_cont_opt_data_txt_cont'><Button className='app_sett_tab_pass_chang_butt'variant=\"outline-danger\"  onClick={() => { this.setState({deacAccModalVisi :true}) }}>Deactivate Account</Button></div>\r\n                               </div>\r\n                               </div>\r\n                               </div>\r\n                               \r\n                       </div>\r\n                   </Tab>\r\n                   <Tab eventKey=\"api\" title=\"Api\">\r\n\r\n                   </Tab>\r\n                   </Tabs>\r\n                   </div>\r\n         </div>  \r\n       );\r\n   }\r\n   }\r\n   ","E:\\sakura\\sakura-front\\src\\noti\\noti.js",["93","94","95"],"import axios from 'axios';\r\nimport React, { useState,useEffect  } from 'react';\r\n\r\n\r\n\r\nexport default class Notification extends React.Component{\r\n     constructor(props){\r\n          super(props);\r\n          this.state = {\r\n          notiCount:0,         \r\n          }\r\n      \r\n     }\r\n\r\n     \r\n\r\n    \r\n\r\n     render(){\r\n          return(<>          \r\n               \r\n               </>);\r\n     }\r\n}\r\n\r\n","E:\\sakura\\sakura-front\\src\\land\\land.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112"],"E:\\sakura\\sakura-front\\src\\land\\addLink.js",["113","114","115","116","117","118","119","120","121","122","123"],"import axios from 'axios';\r\nimport React, { useState,useEffect  } from 'react';\r\nimport {Dropdown,Button,Alert,Spinner,Tab,Modal,Tabs} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style/land.css';\r\nimport '../style/addlink.css';\r\nimport '../App.css';\r\nimport qs from 'qs';\r\n\r\nexport default class AddLink extends React.Component{\r\n     constructor(props){\r\n       super(props);\r\n          this.state={\r\n               currStep:0,\r\n          }\r\n     }\r\n\r\n\r\n     getNameComp(){\r\n          return(<>\r\n                         <div id='app_add_lnk_tit_cont'>\r\n                              1) Start with giving your <br/> link a name\r\n                         </div>\r\n                         <div id='app_add_lnk_nam_cont'>\r\n                              <input type='text' id='app_add_lnk_nam_fld' placeholder='Enter link name'>\r\n                              </input>\r\n                         </div>\r\n          </>)\r\n     }\r\n\r\n     getLinkComp(){\r\n          return(<>\r\n                         <div id='app_add_lnk_tit_cont'>\r\n                              2) Tell us the destination URL for link\r\n                         </div>\r\n                         <div id='app_add_lnk_nam_cont'>\r\n                              <input type='text' id='app_add_lnk_nam_fld' placeholder='Enter destination URL'>\r\n                              </input>\r\n                         </div>\r\n          </>)\r\n     }\r\n\r\n     getUrlComp(){\r\n          return(<>\r\n                         <div id='app_add_lnk_tit_cont'>\r\n                              3) Heres the link\r\n                         </div>\r\n                         <div id='app_add_lnk_nam_cont'>\r\n                              <div id='app_add_lnk_gen_lnk'>\r\n                                htttps://www.Cytescale.com/hehehe     \r\n                              <svg className='app_add_lnk_gen_lnk_ico' viewBox='0 0 512 512'><title>Clipboard</title><path d='M336 64h32a48 48 0 0148 48v320a48 48 0 01-48 48H144a48 48 0 01-48-48V112a48 48 0 0148-48h32' fill='none' stroke='currentColor' stroke-linejoin='round' stroke-width='32'/><rect x='176' y='32' width='160' height='64' rx='26.13' ry='26.13' fill='none' stroke='currentColor' stroke-linejoin='round' stroke-width='32'/></svg>\r\n                              </div>\r\n                              <button id='app_add_lnk_gen_snd_butt'>\r\n                                   Send link to email\r\n                              </button>\r\n                         </div>\r\n          </>)\r\n     }\r\n\r\n     renderComp(){\r\n          switch(this.state.currStep){\r\n               case 0:{\r\n                    return this.getNameComp();\r\n               }\r\n               case 1:{\r\n                    return this.getLinkComp();\r\n               }\r\n               case 2:{\r\n                    return this.getUrlComp();\r\n               }\r\n               default:{\r\n                    return this.getNameComp();\r\n               }\r\n          }\r\n     }\r\n\r\n     \r\n\r\n\r\n     render(){\r\n          return(<>\r\n               <div id='app_add_lnk_new_main_cont'>\r\n               <div id='app_add_lnk_lft_cont'>\r\n                         <div id='app_add_lnk_cls_cont'>\r\n                         <svg className='app_add_lnk_cls_cont_ico' viewBox='0 0 512 512'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='32' d='M368 368L144 144M368 144L144 368'/></svg>\r\n                         Create a new link\r\n                         </div>\r\n                         {this.renderComp()}\r\n                         <div id='app_add_lnk_nxt_cont'>\r\n                              {\r\n                                   this.state.currStep>0?<button id='app_add_lnk_bck_butt'onClick={()=>{\r\n                                        this.setState({\r\n                                             currStep:this.state.currStep>=0?this.state.currStep-1:this.state.currStep\r\n                                        })\r\n                                   }}>\r\n                                   Back\r\n                              </button>:<span></span>\r\n                              }\r\n                              \r\n                              <button id='app_add_lnk_nxt_butt' onClick={()=>{\r\n                                   this.setState({\r\n                                        currStep:this.state.currStep<2?this.state.currStep+1:this.state.currStep\r\n                                   })\r\n                              }}>Continue</button>\r\n                         </div>\r\n               </div>\r\n\r\n               <div id='app_add_lnk_rgt_cont'></div>\r\n               </div>\r\n          </>);\r\n     }\r\n}","E:\\sakura\\sakura-front\\src\\analytics\\analytics.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"import axios from 'axios';\r\nimport React, { useState,useEffect,useParams  } from 'react';\r\nimport {Dropdown,Button,Alert,Spinner,Tab,Modal,DropdownButton,Tabs,Accordion,Card,useAccordionToggle,Row,Col,Nav} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style/analytics.css';\r\nimport '../style/dash.css';\r\nimport '../App.css';\r\nimport Chart from 'chart.js';\r\nimport qs from 'qs';\r\n\r\n\r\nlet ana_click_fak_data = [{\"id\":39,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T17:48:28.000Z\"},{\"id\":40,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T17:48:40.000Z\"},{\"id\":41,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T17:48:47.000Z\"},{\"id\":42,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T18:21:08.000Z\"},{\"id\":43,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T18:28:02.000Z\"},{\"id\":48,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T18:28:55.000Z\"},{\"id\":50,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T18:40:14.000Z\"},{\"id\":51,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T18:45:19.000Z\"},{\"id\":53,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T19:18:44.000Z\"},{\"id\":54,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-05T19:23:21.000Z\"},{\"id\":55,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-06T14:24:16.000Z\"},{\"id\":56,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-06T14:24:35.000Z\"},{\"id\":57,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-06T15:38:51.000Z\"},{\"id\":58,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-06T21:40:03.000Z\"},{\"id\":59,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-06T21:40:26.000Z\"},{\"id\":60,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-06T21:41:41.000Z\"},{\"id\":61,\"ana_link_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"ip_add\":\"::1\",\"timestamp\":\"2021-02-06T21:57:22.000Z\"}];\r\nlet ana_os_fak_data = [{\"id\":19,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:10.000Z\"},{\"id\":20,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:26.000Z\"},{\"id\":21,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:26.000Z\"},{\"id\":22,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:26.000Z\"},{\"id\":23,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:26.000Z\"},{\"id\":24,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:26.000Z\"},{\"id\":25,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:26.000Z\"},{\"id\":26,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:26.000Z\"},{\"id\":27,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:27.000Z\"},{\"id\":28,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:27.000Z\"},{\"id\":29,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:27.000Z\"},{\"id\":30,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:27.000Z\"},{\"id\":31,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:32:27.000Z\"},{\"id\":32,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:46:09.000Z\"},{\"id\":33,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:46:36.000Z\"},{\"id\":34,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:46:44.000Z\"},{\"id\":35,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:47:02.000Z\"},{\"id\":36,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:47:08.000Z\"},{\"id\":37,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:48:24.000Z\"},{\"id\":38,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:48:28.000Z\"},{\"id\":39,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:48:40.000Z\"},{\"id\":40,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T17:48:47.000Z\"},{\"id\":41,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T18:21:08.000Z\"},{\"id\":42,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T18:28:02.000Z\"},{\"id\":47,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T18:28:55.000Z\"},{\"id\":49,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T18:40:14.000Z\"},{\"id\":50,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T18:45:19.000Z\"},{\"id\":52,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T19:18:44.000Z\"},{\"id\":53,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-05T19:23:21.000Z\"},{\"id\":54,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-06T14:24:16.000Z\"},{\"id\":55,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-06T14:24:35.000Z\"},{\"id\":56,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-06T15:38:51.000Z\"},{\"id\":57,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-06T21:40:03.000Z\"},{\"id\":58,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-06T21:40:26.000Z\"},{\"id\":59,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-06T21:41:41.000Z\"},{\"id\":60,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"iOS\",\"browser_type\":\"Edge\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-06T21:57:22.000Z\"},{\"id\":61,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-06T22:31:53.000Z\"},{\"id\":62,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"os_type\":\"Windows\",\"browser_type\":\"Netscape\",\"lang\":\"en-US\",\"timestamp\":\"2021-02-06T23:39:47.000Z\"}];\r\nlet ana_loca_fak_data = [{\"id\":1,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"null\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:56:39.000Z\"},{\"id\":2,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"null\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:58:02.000Z\"},{\"id\":3,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"null\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:02:42.000Z\"},{\"id\":4,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"null\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:04:47.000Z\"},{\"id\":5,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"null\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:05:04.000Z\"},{\"id\":6,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"null\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:05:14.000Z\"},{\"id\":7,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"null\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:08:07.000Z\"},{\"id\":8,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"null\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:08:38.000Z\"},{\"id\":9,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"null\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:11:17.000Z\"},{\"id\":10,\"ana_lnk_spcl_id\":\"GI3E\",\"ana_tab_spcl_id\":\"joCc-itySb\",\"state\":\"Maharashtra\",\"city\":\"Pune\",\"country\":\"India\",\"timestamp\":\"2021-02-09T19:11:40.000Z\"}];\r\n\r\n\r\nexport default class Analytic extends React.Component{\r\n     link_spcl_key = null;\r\n     brow_color_list =  [\"rgba(14,152,255,1)\",'rgba(156,255,178,1)','#D6A1FF'];\r\n     constructor(props){\r\n       super(props);\r\n       this.state= {\r\n            curr_time_selec:0,\r\n            tot_click_count:0,\r\n            tot_visit_count:0,\r\n            brow_list:[],\r\n            os_list:[],\r\n            lang_list:[],\r\n            countryList:[],\r\n       }\r\n       props.setPage(2);\r\n       console.log(\"ANALYTICS SPCL ID\"+this.props.match.params.lind_id);\r\n       this.link_spcl_key = this.props.match.params.lind_id;\r\n       this.setCurrPeriod = this.setCurrPeriod.bind(this);\r\n       this.setTotalClicKCount= this.setTotalClicKCount.bind(this);\r\n       this.makeGraph2 = this.makeGraph2.bind(this);\r\n       this.makeGraphVisit =this.makeGraphVisit.bind(this);\r\n       this.setBrowList = this.setBrowList.bind(this);\r\n       this.setOsList = this.setOsList.bind(this);\r\n       this.setCountryList = this.setCountryList.bind(this);\r\n       this.setLangList = this.setLangList.bind(this);\r\n     }\r\n\r\n     setCountryList(list){\r\n          this.setState({\r\n               countryList:list\r\n          });\r\n     }\r\n\r\n     setBrowList(list){\r\n          this.setState({\r\n               brow_list:list\r\n          });\r\n     }\r\n     setOsList(list){\r\n          this.setState({\r\n               os_list:list\r\n          });\r\n     }\r\n     setLangList(list){\r\n          this.setState({\r\n               lang_list:list\r\n          });\r\n     }\r\n\r\n     setTotalClicKCount(int){\r\n          this.setState({\r\n               tot_click_count:int\r\n          });\r\n     }\r\n     setTotalUniCount(int){\r\n          this.setState({\r\n               tot_visit_count:int\r\n          });\r\n     }\r\n\r\n\r\n     setCurrPeriod(int){\r\n          this.setState({curr_time_selec:int});\r\n          console.log(\"CURR PERDIOD\"+int);\r\n          this.makeGraph2(int);\r\n          this.makeGraphVisit(int);\r\n          this.getCountryList();\r\n          this.makeGraphVisitLang();\r\n     }\r\n\r\n     getClickGraphXTitle(selec){\r\n          switch(selec){\r\n               case 0:{\r\n                    return \"Time (24 hrs)\";\r\n                    break;\r\n               }\r\n               case 1:{                    \r\n                    return \"Day\";\r\n                    break;\r\n               }\r\n               case 2:{\r\n                    return \"Date\";\r\n                    break;\r\n               }\r\n               case 3:{\r\n                    return \"Month\";\r\n                    break;\r\n               }\r\n               default:{\r\n                    return \"Time (24 hrs)\";\r\n                    break;\r\n               }\r\n          }\r\n     }\r\n     \r\n     getPeriodTitle(){\r\n          switch(this.state.curr_time_selec){\r\n               case 0:{\r\n                    return \"Last Day\";\r\n                    break;\r\n               }\r\n               case 1:{                    \r\n                    return \"Last Week\";\r\n                    break;\r\n               }\r\n               case 2:{\r\n                    return \"Last Month\";\r\n                    break;\r\n               }\r\n               case 3:{\r\n                    return \"Last Year\";\r\n                    break;\r\n               }\r\n               default:{\r\n                    return \"Last Day\";\r\n                    break;\r\n               }\r\n          }\r\n     }\r\n     \r\n     getGrapYAxisTitle(tab_y_arry,selec){\r\n          let weekday = new Array(7);\r\n          weekday[0] = \"Sunday\";\r\n          weekday[1] = \"Monday\";\r\n          weekday[2] = \"Tuesday\";\r\n          weekday[3] = \"Wednesday\";\r\n          weekday[4] = \"Thursday\";\r\n          weekday[5] = \"Friday\";\r\n          weekday[6] = \"Saturday\";\r\n          var month = new Array();\r\n          month[0] = \"January\";\r\n          month[1] = \"February\";\r\n          month[2] = \"March\";\r\n          month[3] = \"April\";\r\n          month[4] = \"May\";\r\n          month[5] = \"June\";\r\n          month[6] = \"July\";\r\n          month[7] = \"August\";\r\n          month[8] = \"September\";\r\n          month[9] = \"October\";\r\n          month[10] = \"November\";\r\n          month[11] = \"December\";\r\n          \r\n          let tab_y_arry_tit = [];\r\n          switch(selec){\r\n               case 0:{\r\n                    for(let i = tab_y_arry.length ; i > 0  ; i--){\r\n                         tab_y_arry_tit.push(tab_y_arry[i-1][0] + \":00\");\r\n                    }     \r\n                    break;\r\n               }\r\n               case 1:{                    \r\n                    for(let i = tab_y_arry.length ; i > 0  ; i--){\r\n                         tab_y_arry_tit.push(weekday[tab_y_arry[i-1][0]]);\r\n                    }   \r\n                    break;\r\n               }\r\n               case 2:{\r\n                    for(let i = tab_y_arry.length ; i > 0  ; i--){\r\n                         tab_y_arry_tit.push(tab_y_arry[i-1][0]);\r\n                    }   \r\n                    break;\r\n               }\r\n               case 3:{\r\n                    for(let i = tab_y_arry.length ; i > 0  ; i--){\r\n                         tab_y_arry_tit.push(month[tab_y_arry[i-1][0]]);\r\n                    }    \r\n                    break;\r\n               }\r\n               default:{\r\n                    for(let i = tab_y_arry.length ; i > 0  ; i--){\r\n                         tab_y_arry_tit.push(tab_y_arry[i-1] + \":00\");\r\n                    } \r\n                    break;\r\n               }\r\n          }\r\n          return tab_y_arry_tit;\r\n     }\r\n\r\n     getGraphYAxis(selec){\r\n          let tab_y_arry = []\r\n          let prev_date;\r\n          prev_date = new Date();\r\n          switch(selec){\r\n               case 0:{\r\n                    for(let i = 0 ; i < 24 ; i++){\r\n                         let complexPush = []\r\n                         complexPush.push(prev_date.getHours());\r\n                         complexPush.push(prev_date.getDate());\r\n                         tab_y_arry.push(complexPush);\r\n                         prev_date.setHours(prev_date.getHours()-1);\r\n                    }         \r\n                    break;\r\n               }\r\n               case 1:{                    \r\n                    for(let i = 0 ; i < 7 ; i++){\r\n                         let complexPush=[];\r\n                         complexPush.push(prev_date.getDay());\r\n                         complexPush.push(prev_date.getDate());\r\n                         tab_y_arry.push(complexPush);\r\n                         prev_date.setDate(prev_date.getDate()-1)\r\n                    }  \r\n                    break;\r\n               }\r\n               case 2:{\r\n                    for(let i = 0 ; i < 30 ; i++){\r\n                         let complexPush=[];\r\n                         complexPush.push(prev_date.getDate());\r\n                         complexPush.push(prev_date.getMonth());\r\n                         tab_y_arry.push(complexPush);\r\n                         prev_date.setDate(prev_date.getDate()-1)\r\n                    }  \r\n                    break;\r\n               }\r\n               case 3:{\r\n                    for(let i = 0 ; i < 12 ; i++){\r\n                         let complexPush=[];\r\n                         complexPush.push(prev_date.getMonth());\r\n                         complexPush.push(prev_date.getFullYear()); \r\n                         tab_y_arry.push(complexPush);\r\n                         prev_date.setMonth(prev_date.getMonth()-1)\r\n                    }  \r\n                    break;\r\n               }\r\n               default:{\r\n                    for(let i = 0 ; i < 24 ; i++){\r\n                         tab_y_arry.push(prev_date.getHours());\r\n                         prev_date.setHours(prev_date.getHours()-1);\r\n                    }   \r\n                    break;\r\n               }\r\n          }\r\n          return tab_y_arry;\r\n     }\r\n     graphDataParser(j,z,tab_y_axis,selec)\r\n     {\r\n          \r\n          switch(selec){\r\n               case 0:{\r\n                    return (tab_y_axis[j][0] === parseInt(ana_click_fak_data[z].timestamp.split(\"T\")[1].split(\":\")[0]) \r\n                           && tab_y_axis[j][1] === parseInt(ana_click_fak_data[z].timestamp.split(\"T\")[0].split(\"-\")[2]) );      \r\n                    break;\r\n               }\r\n               case 1:{                    \r\n                    return (tab_y_axis[j][1] === parseInt(ana_click_fak_data[z].timestamp.split(\"T\")[0].split(\"-\")[2])); \r\n                    break;\r\n               }\r\n               case 2:{\r\n                    return (tab_y_axis[j][0] === parseInt(ana_click_fak_data[z].timestamp.split(\"T\")[0].split(\"-\")[2])\r\n                           &&((tab_y_axis[j][1]+1)=== parseInt(ana_click_fak_data[z].timestamp.split(\"T\")[0].split(\"-\")[1]))); \r\n                    break;\r\n               }\r\n               case 3:{\r\n                    return ((tab_y_axis[j][0]+1) === parseInt(ana_click_fak_data[z].timestamp.split(\"T\")[0].split(\"-\")[1])\r\n                         &&(tab_y_axis[j][1] === parseInt(ana_click_fak_data[z].timestamp.split(\"T\")[0].split(\"-\")[0]))); \r\n                    break;\r\n               }\r\n               default:{\r\n                    \r\n                    break;\r\n               }\r\n          }\r\n     }\r\n     graphXAxisData(graph_x_raw_data){\r\n          let grap_x_dat = [];\r\n          for(let j = graph_x_raw_data.length ; j > 0 ; j--){\r\n               grap_x_dat.push(graph_x_raw_data[j-1]);\r\n          }\r\n          return grap_x_dat;\r\n     }\r\n     makeGraph2(time_selec)\r\n     {\r\n          if(time_selec==null){\r\n               time_selec = 0;\r\n          }\r\n          console.log(\"GRAPH RENDER\");\r\n          var canvas = this.refs.canvas;\r\n          var ctx = canvas.getContext(\"2d\");     \r\n          \r\n          var gradient = ctx.createLinearGradient(0, 0, 0, 350);\r\n          gradient.addColorStop(0, 'rgba(156,255,178,1)');\r\n          gradient.addColorStop(1, 'rgba(255,255,255,1)');\r\n          \r\n          let tab_hr_arry =this.getGraphYAxis(time_selec);\r\n          let tab_y_tit = this.getGrapYAxisTitle(tab_hr_arry,time_selec);\r\n          let tab_data_arry =new Array(tab_hr_arry.length).fill(0);;\r\n          let tot_click_count = 0 ; \r\n         \r\n          for(let j = 0 ; j < tab_hr_arry.length ; j++){\r\n               for(let z = 0 ; z < ana_click_fak_data.length ; z++){\r\n                    if(this.graphDataParser(j,z,tab_hr_arry,time_selec)){\r\n                         if(tab_data_arry[j]==null){\r\n                              tab_data_arry[j]=1;   \r\n                         }\r\n                         else{\r\n                         tab_data_arry[j] = tab_data_arry[j] + 1;\r\n                         }\r\n                         tot_click_count++;\r\n                    }\r\n               }\r\n          }\r\n\r\n          let dt = this.graphXAxisData(tab_data_arry);\r\n          let xTitle = this.getClickGraphXTitle(time_selec);\r\n          this.setTotalClicKCount(tot_click_count);          \r\n          var myChart = new Chart(ctx,  {\r\n                    type: 'line',\r\n                    data: {\r\n                        labels: tab_y_tit,\r\n                        datasets: [\r\n                             {\r\n                              fill:true,   \r\n                              label: 'Viewers',\r\n                            data:dt,\r\n                            backgroundColor:gradient,\r\n                            borderColor: ['rgba(156, 255, 178,0.5)',],\r\n                            borderWidth: 5,\r\n                            pointRadius: 0,\r\n                            lineTension:0,\r\n                            pointBorderWidth:0,\r\n                            pointBorderColor:'#BBFFCA',\r\n                            pointBackgroundColor:'#BBFFCA'\r\n                        },\r\n                        \r\n                    ]\r\n                    },\r\n                    options: {\r\n                         title: {\r\n                              display: true,\r\n                              \r\n                          }, legend: {\r\n                              display: false\r\n                            },\r\n                        scales: {\r\n                              xAxes: [{\r\n                                   scaleLabel: {\r\n                                        display: true,\r\n                                        labelString: xTitle,\r\n                                        fontFamily:'sen',\r\n                                        fontSize:15,\r\n                                   },\r\n                                   gridLines: {\r\n                                   drawBorder: true,\r\n                                   color: 'rgba(200, 200, 200,0.2)',\r\n                                  lineWidth: 1\r\n                              }\r\n                              , ticks: {\r\n                                   display:true,\r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:12,\r\n                                   fontColor:'#bdbdbd',\r\n                                 }\r\n                          }],\r\n                              yAxes: [{\r\n                                   scaleLabel: {\r\n                                        display: true,\r\n                                        labelString: 'Click',\r\n                                        fontFamily:'sen',\r\n                                        fontSize:15,\r\n          \r\n                                   },\r\n                              gridLines: {\r\n                                   drawBorder: true,\r\n                                  color: 'rgba(200, 200, 200,0.2)',\r\n                                  lineWidth: 1\r\n                              },\r\n                              ticks: {\r\n                                   beginAtZero: true,\r\n                                   fontFamily:'quicksand',\r\n                                   fontColor:'#bdbdbd',\r\n                                 }\r\n                          }],\r\n                        }\r\n                    }\r\n                });\r\n                ctx.clearRect(0, 0, 200, 300);\r\n                ctx.restore();\r\n\r\n     }\r\n     makeGraphVisit(time_selec){\r\n          const canvas = this.refs.canvas_vist;\r\n          const ctx = canvas.getContext(\"2d\");     \r\n          if(time_selec==null){\r\n               time_selec = 0;\r\n          }\r\n          let tot_vist_count = 0;\r\n          \r\n          let tab_hr_arry =this.getGraphYAxis(time_selec);\r\n          let tab_y_tit = this.getGrapYAxisTitle(tab_hr_arry,time_selec);\r\n          let tab_data_arry =new Array(tab_hr_arry.length).fill(0);\r\n          var gradient_2 = ctx.createLinearGradient(0, 0, 0,300);\r\n          gradient_2.addColorStop(1, 'rgba(255,255,255,0)');\r\n          gradient_2.addColorStop(0, 'rgba(14,152,255,1)');\r\n          \r\n          for(let j = 0 ; j < tab_hr_arry.length ; j++){\r\n               let ip_uni_tab = [];\r\n               for(let z = 0 ; z < ana_click_fak_data.length ; z++){\r\n                    if(this.graphDataParser(j,z,tab_hr_arry,time_selec)){\r\n                         var n = ip_uni_tab.includes(ana_click_fak_data[z].ip_add);\r\n                         if(n!=null && n===false){\r\n                              if(tab_data_arry[j]==null){\r\n                                   tab_data_arry[j]=1;   \r\n                              }\r\n                              else{     \r\n                              tab_data_arry[j] = tab_data_arry[j] + 1;\r\n                              }\r\n                              ip_uni_tab.push(ana_click_fak_data[z].ip_add);\r\n                              tot_vist_count++;\r\n                         }    \r\n                         else{\r\n                              \r\n                         }\r\n                    }\r\n               }\r\n          }\r\n\r\n          this.setTotalUniCount(tot_vist_count);\r\n          let dt = this.graphXAxisData(tab_data_arry);\r\n          let xTitle = this.getClickGraphXTitle(time_selec);\r\n          var myChart = new Chart(ctx,  {\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels:tab_y_tit,\r\n                        datasets: [\r\n                             {\r\n                              fill:true,   \r\n                              label: 'Viewers',\r\n                            data:dt,\r\n                            backgroundColor:gradient_2,\r\n                            borderColor: ['rgba(156, 255, 178,0.5)',],\r\n                            \r\n                            barThickness:15,\r\n                    \r\n                        },\r\n                        \r\n                    ]\r\n                    },\r\n                    options: {\r\n                         title: {\r\n                              display: true,\r\n                              \r\n                          }, legend: {\r\n                              display: false\r\n                            },\r\n                        scales: {\r\n                              xAxes: [{\r\n                                   scaleLabel: {\r\n                                        display: true,\r\n                                        labelString: 'Date',\r\n                                        fontFamily:'sen',\r\n                                        fontSize:15,\r\n          \r\n                                   },\r\n                                   gridLines: {\r\n                                   drawBorder: true,\r\n                                   color: 'rgba(0,0,0,0)',\r\n                                   lineWidth: 1\r\n                              }\r\n                              , ticks: {\r\n                                   display:true,\r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:12,\r\n                                   fontColor:'#bdbdbd',\r\n                                 }\r\n                          }],\r\n                              yAxes: [{\r\n                                   scaleLabel: {\r\n                                        display: true,\r\n                                        labelString: 'Visitors',\r\n                                        fontFamily:'sen',\r\n                                        fontSize:15,\r\n          \r\n                                   },\r\n                              gridLines: {\r\n                                   drawBorder: false,\r\n                                  color: 'rgba(200, 200, 200, 0.00)',\r\n                                  lineWidth: 0\r\n                              },\r\n                              ticks: {\r\n                                   beginAtZero: true,\r\n                                   fontFamily:'quicksand',\r\n                                   fontColor:'#bdbdbd',\r\n                                 }\r\n                          }],\r\n                        }\r\n                    }\r\n                });\r\n                ctx.clearRect(0, 0, 200, 300);\r\n                ctx.restore();\r\n     }\r\n     makeGraphVisitCity(){\r\n          const canvas = this.refs.canvas_visit_city;\r\n          const ctx = canvas.getContext(\"2d\");     \r\n\r\n          let tab_labs = [];\r\n          let tab_name = [];\r\n          let tab_data = [];\r\n               for(let z = 0 ; z < ana_loca_fak_data.length ; z++){\r\n                    var n = false;\r\n                         for(let o = 0 ; o < tab_labs.length ; o++){\r\n                              var n = tab_labs[o].includes(ana_loca_fak_data[z].city);\r\n                              if(n===true){\r\n                                   tab_labs[o][1]++;\r\n                                   n = true;\r\n                                   break;\r\n                              }\r\n                         } \r\n                     if(n===false){\r\n                          tab_labs.push([ana_loca_fak_data[z].city,1]);\r\n                     }\r\n               }\r\n          for(let p = 0 ; p < tab_labs.length ; p++){\r\n               tab_name.push(tab_labs[p][0]);\r\n               tab_data.push(tab_labs[p][1]);\r\n          }\r\n          var myChart = new Chart(ctx,  {\r\n                    type: 'horizontalBar',\r\n                    data: {\r\n                        labels: tab_name,\r\n                        datasets: [\r\n                             {\r\n                              fill:false,   \r\n                              label: 'clicks',\r\n                            data:tab_data,\r\n                            backgroundColor: \"rgba(14,152,255,1)\",\r\n                            borderColor: ['rgba(156, 255, 178,0.5)',],\r\n                              \r\n                            barThickness:15,\r\n                    \r\n                        },\r\n                        \r\n                    ]\r\n                    },\r\n                    options: {\r\n                         title: {\r\n                              display: false,\r\n                              \r\n                          }, legend: {\r\n                              display: false\r\n                            },\r\n                        scales: {\r\n                              xAxes: [{\r\n                                   display:false,\r\n                                   gridLines: {\r\n                                   drawBorder: true,\r\n                                   color: 'rgba(0,0,0,0)',\r\n                                   lineWidth: 1\r\n                              }\r\n                              , ticks: {\r\n                                   display:true,\r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:12,\r\n                                   fontColor:'#212121',\r\n                                 }\r\n                          }],\r\n                              yAxes: [{\r\n                              display:true,\r\n                              gridLines: {\r\n                                   display:false,\r\n                                   drawBorder: false,\r\n                                  color: 'rgba(200, 200, 200, 0.00)',\r\n                                  lineWidth: 0\r\n                              },\r\n                              ticks: {\r\n                    \r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:15,\r\n                                   fontColor:'#212121',\r\n                                 }\r\n                          }],\r\n                        }\r\n                    }\r\n                });\r\n     }\r\n     makeGraphVisitOS(time_selec){\r\n          if(time_selec==null){\r\n               time_selec=0;\r\n          }\r\n          const canvas = this.refs.canvas_visit_os;\r\n          const ctx = canvas.getContext(\"2d\");     \r\n    \r\n          let tab_labs = [];\r\n          let tab_name = [];\r\n          let tab_data = [];\r\n               for(let z = 0 ; z < ana_os_fak_data.length ; z++){\r\n                    var n = false;\r\n                         for(let o = 0 ; o < tab_labs.length ; o++){\r\n                              var n = tab_labs[o].includes(ana_os_fak_data[z].os_type);\r\n                              if(n===true){\r\n                                   tab_labs[o][1]++;\r\n                                   n = true;\r\n                                   break;\r\n                              }\r\n                         } \r\n                     if(n===false){\r\n                          tab_labs.push([ana_os_fak_data[z].os_type,1]);\r\n                     }\r\n               }\r\n          for(let p = 0 ; p < tab_labs.length ; p++){\r\n               tab_name.push(tab_labs[p][0]);\r\n               tab_data.push(tab_labs[p][1]);\r\n          }\r\n          \r\n          this.setOsList(tab_name);\r\n\r\n          var myChart = new Chart(ctx,  {\r\n                    type: 'doughnut',\r\n                    data: {\r\n                        labels: tab_name,\r\n                        datasets: [\r\n                             {\r\n                              fill:false,   \r\n                              label: 'Viewers',\r\n                            data:tab_data,\r\n                            backgroundColor: [\"rgba(14,152,255,1)\",'rgba(156,255,178,1)','#D6A1FF'],     \r\n                    \r\n                        },\r\n                        \r\n                    ]\r\n                    },\r\n                    options: {\r\n                         responsive: true,\r\n                         title:{\r\n                             display: false,\r\n                         },\r\n                         legend: {\r\n                              display: false\r\n                            },\r\n                        scales: {\r\n                              xAxes: [{\r\n                                   display:false,\r\n                                   gridLines: {\r\n                                   drawBorder: true,\r\n                                   color: 'rgba(0,0,0,0)',\r\n                                   lineWidth: 1\r\n                              }\r\n                              , ticks: {\r\n                                   display:true,\r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:12,\r\n                                   fontColor:'#212121',\r\n                                 }\r\n                          }],\r\n                              yAxes: [{\r\n                              display:false,\r\n                              gridLines: {\r\n                                   drawBorder: false,\r\n                                  color: 'rgba(200, 200, 200, 0.00)',\r\n                                  lineWidth: 0\r\n                              },\r\n                              ticks: {\r\n                    \r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:15,\r\n                                   fontColor:'#212121',\r\n                                 }\r\n                          }],\r\n                        }\r\n                    }\r\n                });\r\n     }\r\n     makeGraphVisitLang(){\r\n          const canvas = this.refs.canvas_visit_lang;\r\n          const ctx = canvas.getContext(\"2d\");     \r\n          let tab_labs = [];\r\n          let tab_name = [];\r\n          let tab_data = [];\r\n               for(let z = 0 ; z < ana_os_fak_data.length ; z++){\r\n                    var n = false;\r\n                         for(let o = 0 ; o < tab_labs.length ; o++){\r\n                              var n = tab_labs[o].includes(ana_os_fak_data[z].lang);\r\n                              if(n===true){\r\n                                   tab_labs[o][1]++;\r\n                                   n = true;\r\n                                   break;\r\n                              }\r\n                         } \r\n                     if(n===false){\r\n                          tab_labs.push([ana_os_fak_data[z].lang,1]);\r\n                     }\r\n               }\r\n          for(let p = 0 ; p < tab_labs.length ; p++){\r\n               tab_name.push(tab_labs[p][0]);\r\n               tab_data.push(tab_labs[p][1]);\r\n          }\r\n          \r\n          this.setLangList(tab_name);\r\n\r\n          var myChart = new Chart(ctx,  {\r\n                    type: 'doughnut',\r\n                    data: {\r\n                        labels: tab_name,\r\n                        datasets: [\r\n                             {\r\n                              fill:false,   \r\n                              label: 'Viewers',\r\n                            data:tab_data,\r\n                            backgroundColor: [\"rgba(14,152,255,1)\",'rgba(156,255,178,1)','#D6A1FF'],     \r\n                    \r\n                        },\r\n                        \r\n                    ]\r\n                    },\r\n                    options: {\r\n                         responsive: true,\r\n                         title:{\r\n                             display: false,\r\n                         },\r\n                         legend: {\r\n                              display: false\r\n                            },\r\n                        scales: {\r\n                              xAxes: [{\r\n                                   display:false,\r\n                                   gridLines: {\r\n                                   drawBorder: true,\r\n                                   color: 'rgba(0,0,0,0)',\r\n                                   lineWidth: 1\r\n                              }\r\n                              , ticks: {\r\n                                   display:true,\r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:12,\r\n                                   fontColor:'#212121',\r\n                                 }\r\n                          }],\r\n                              yAxes: [{\r\n                              display:false,\r\n                              gridLines: {\r\n                                   drawBorder: false,\r\n                                  color: 'rgba(200, 200, 200, 0.00)',\r\n                                  lineWidth: 0\r\n                              },\r\n                              ticks: {\r\n                    \r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:15,\r\n                                   fontColor:'#212121',\r\n                                 }\r\n                          }],\r\n                        }\r\n                    }\r\n                });\r\n     }\r\n     makeGraphVisitBrow(){\r\n          const canvas = this.refs.canvas_visit_brow;\r\n          const ctx = canvas.getContext(\"2d\");     \r\n\r\n          let tab_labs = [];\r\n          let tab_name = [];\r\n          let tab_data = [];\r\n               for(let z = 0 ; z < ana_os_fak_data.length ; z++){\r\n                    var n = false;\r\n                         for(let o = 0 ; o < tab_labs.length ; o++){\r\n                              var n = tab_labs[o].includes(ana_os_fak_data[z].browser_type);\r\n                              if(n===true){\r\n                                   tab_labs[o][1]++;\r\n                                   n = true;\r\n                                   break;\r\n                              }\r\n                         } \r\n                     if(n===false){\r\n                          tab_labs.push([ana_os_fak_data[z].browser_type,1]);\r\n                     }\r\n               }\r\n          for(let p = 0 ; p < tab_labs.length ; p++){\r\n               tab_name.push(tab_labs[p][0]);\r\n               tab_data.push(tab_labs[p][1]);\r\n          }\r\n\r\n          this.setBrowList(tab_name);\r\n          var myChart = new Chart(ctx,  {\r\n                    type: 'pie',\r\n                    data: {\r\n                        labels:tab_name,\r\n                        datasets: [\r\n                             {\r\n                              fill:true,   \r\n                              label: 'Viewers',\r\n                            data: tab_data,\r\n                            backgroundColor:  [\"rgba(14,152,255,1)\",'rgba(156,255,178,1)','#D6A1FF'],     \r\n                    \r\n                        },\r\n                        \r\n                    ]\r\n                    },\r\n                    options: {\r\n                         responsive: true,\r\n                         title:{\r\n                             display: false,\r\n                         },\r\n                         legend: {\r\n                              display: false\r\n                            },\r\n                        scales: {\r\n                              xAxes: [{\r\n                                   display:false,\r\n                                   gridLines: {\r\n                                   drawBorder: true,\r\n                                   color: 'rgba(0,0,0,0)',\r\n                                   lineWidth: 1\r\n                              }\r\n                              , ticks: {\r\n                                   display:true,\r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:12,\r\n                                   fontColor:'#212121',\r\n                                 }\r\n                          }],\r\n                              yAxes: [{\r\n                              display:false,\r\n                              gridLines: {\r\n                                   drawBorder: false,\r\n                                  color: 'rgba(200, 200, 200, 0.00)',\r\n                                  lineWidth: 0\r\n                              },\r\n                              ticks: {\r\n                    \r\n                                   fontFamily:'quicksand',\r\n                                   fontSize:15,\r\n                                   fontColor:'#212121',\r\n                                 }\r\n                          }],\r\n                        }\r\n                    }\r\n                });\r\n     }\r\n     drawBrowLable(){\r\n          let rows = [];\r\n          for(let i in this.state.brow_list){\r\n               rows.push(\r\n               <div  className='app_land_grh_view_cont_2_leg_cont'><div className='app_land_grh_view_cont_2_leg_cont_idi' style={{backgroundColor:this.brow_color_list[i]}}></div> {this.state.brow_list[i]}</div>\r\n               );\r\n          }\r\n          return rows;\r\n\r\n     }\r\n     drawOsLable(){\r\n          let rows = [];\r\n          for(let i in this.state.os_list){\r\n               rows.push(\r\n               <div  className='app_land_grh_view_cont_2_leg_cont'><div className='app_land_grh_view_cont_2_leg_cont_idi' style={{backgroundColor:this.brow_color_list[i]}}></div> {this.state.os_list[i]}</div>\r\n               );\r\n          }\r\n          return rows;\r\n\r\n     }\r\n\r\n     drawLangLable(){\r\n          let rows = [];\r\n          for(let i in this.state.lang_list){\r\n               rows.push(\r\n               <div  className='app_land_grh_view_cont_2_leg_cont'><div className='app_land_grh_view_cont_2_leg_cont_idi' style={{backgroundColor:this.brow_color_list[i]}}></div> {this.state.lang_list[i]}</div>\r\n               );\r\n          }\r\n          return rows;\r\n\r\n     }\r\n\r\n     getCountryList(){\r\n          let tab_labs = [];\r\n               for(let z = 0 ; z < ana_loca_fak_data.length ; z++){\r\n                    var n = false;\r\n                         for(let o = 0 ; o < tab_labs.length ; o++){\r\n                              var n = tab_labs[o].includes(ana_loca_fak_data[z].country);\r\n                              if(n===true){\r\n                                   tab_labs[o][1]++;\r\n                                   n = true;\r\n                                   break;\r\n                              }\r\n                         } \r\n                     if(n===false){\r\n                          tab_labs.push([ana_loca_fak_data[z].country,1]);\r\n                     }\r\n               }\r\n          this.setCountryList(tab_labs);\r\n     }\r\n\r\n     drawCountryTable(){\r\n          let rows = [];\r\n          let  j = 1;\r\n          for(let i in this.state.countryList){\r\n               rows.push(\r\n                    <tr className='app_land_tab_table_head_row_dat_row'>\r\n                    <td className='app_land_tab_table_head_row_dat_name'>{j}</td>\r\n                    <td className='app_land_tab_table_head_row_dat'>{this.state.countryList[i][0]}</td>\r\n                    <td className='app_land_tab_table_head_row_dat'>{this.state.countryList[i][1]}</td>\r\n                    </tr>\r\n               );\r\n               j++;\r\n          }\r\n          return rows;\r\n\r\n     }\r\n\r\n\r\n\r\n     componentDidMount(){\r\n          this.makeGraph2();\r\n          this.getCountryList();\r\n          this.makeGraphVisit();\r\n          this.makeGraphVisitCity();\r\n          this.makeGraphVisitOS();\r\n          this.makeGraphVisitBrow();\r\n          this.makeGraphVisitLang();\r\n         \r\n     }\r\n     \r\n\r\n     render(){\r\n          return(<>\r\n               <div className='ana_main_cont_bdy'>\r\n               <div className='app_ana_lnk_selec_cont'>\r\n                              <a href='http://localhost:3000/dash' className='app_ana_back_butt'>\r\n                              <svg className='app_ana_lnk_selec_cont_ico' viewBox='0 0 512 512'><title>Arrow Back</title><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='48' d='M244 400L100 256l144-144M120 256h292'/></svg>\r\n                              </a>\r\n                              exmaple Name\r\n                         </div>\r\n                         <Tabs defaultActiveKey=\"Analytics\" id=\"app_ana_tabs_main_cont\" className='app_ana_tabs_main_cont_class' variant=\"pills\">\r\n                         <Tab eventKey=\"Analytics\" title=\"Analytics\" className=\"app_ana_tab_cont\">\r\n                              \r\n                              \r\n                              <div className='app_ana_lnk_date_cont'>\r\n                              <div className='app_ana_lnk_date_cont_tit'>Report for </div>\r\n                              <div className='app_ana_lnk_date_butt_cont'>\r\n                              <DropdownButton id=\"dropdown-item-button\"  variant=\"primary\" title={this.getPeriodTitle()+\" \"}>\r\n                              <Dropdown.Item as=\"button\"  variant=\"light\" onClick={()=>{this.setCurrPeriod(0)}} active={this.state.curr_time_selec===0?true:false}>Last Day</Dropdown.Item>\r\n                              <Dropdown.Item as=\"button\"  variant=\"light\" onClick={()=>{this.setCurrPeriod(1)}} active={this.state.curr_time_selec===1?true:false}>Last Week</Dropdown.Item>\r\n                              <Dropdown.Item as=\"button\"  variant=\"light\"  onClick={()=>{this.setCurrPeriod(2)}} active={this.state.curr_time_selec===2?true:false}>Last Month</Dropdown.Item>\r\n                              <Dropdown.Item as=\"button\" variant=\"light\"  onClick={()=>{this.setCurrPeriod(3)}} active={this.state.curr_time_selec===3?true:false}>Last Year</Dropdown.Item>\r\n                              </DropdownButton>\r\n                              </div>\r\n\r\n                              <div className='app_ana_lnk_date_rgt_cont'>\r\n                              <Button variant=\"light\" className='app_ana_lnk_date_rgt_butt' id='app_ana_lnk_date_rgt_butt_down'>\r\n                                   <svg className='app_ana_lnk_date_rgt_butt_ico' viewBox='0 0 512 512'><title>Arrow Down</title><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='48' d='M112 268l144 144 144-144M256 392V100'/></svg> \r\n                                   Download</Button>\r\n                              <Button variant=\"light\" className='app_ana_lnk_date_rgt_butt'>\r\n                                   <svg  className='app_ana_lnk_date_rgt_butt_ico'  viewBox='0 0 512 512'><title>Save</title><path d='M380.93 57.37A32 32 0 00358.3 48H94.22A46.21 46.21 0 0048 94.22v323.56A46.21 46.21 0 0094.22 464h323.56A46.36 46.36 0 00464 417.78V153.7a32 32 0 00-9.37-22.63zM256 416a64 64 0 1164-64 63.92 63.92 0 01-64 64zm48-224H112a16 16 0 01-16-16v-64a16 16 0 0116-16h192a16 16 0 0116 16v64a16 16 0 01-16 16z' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='32'/></svg>\r\n                                   Save As </Button>\r\n                              </div>\r\n\r\n                         </div>\r\n\r\n\r\n{/* \r\n                         <div className='app_ana_sec_tit_cont'>\r\n                                   <div  className='app_ana_sec_tit'>Hows yours link doing</div>\r\n                                   </div> */}\r\n\r\n                         <div className='app_ana_box_main_cont'>\r\n                              <div className='app_ana_box_cont'>\r\n                                   <div className='app_ana_box_cont_tit'>Total Clicks</div>\r\n                                   <div className='app_ana_box_cont_dat'>{this.state.tot_click_count}</div>\r\n                              </div>\r\n                              <div className='app_ana_box_cont'>\r\n                                   <div className='app_ana_box_cont_tit'>Unique Vistors</div>\r\n                                   <div className='app_ana_box_cont_dat'>{this.state.tot_visit_count}</div>\r\n                              </div>\r\n                              <div className='app_ana_box_cont'>\r\n                                   <div className='app_ana_box_cont_tit'>Total App opens</div>\r\n                                   <div className='app_ana_box_cont_dat'>0</div>\r\n                              </div>\r\n                              <div className='app_ana_box_cont'>\r\n                                   <div className='app_ana_box_cont_tit'>Last open</div>\r\n                                   <div className='app_ana_box_cont_dat'>0</div>\r\n                              </div>\r\n                         </div>\r\n{/* box-shadow: var(--app_primary-box-shadow); */}\r\n                                        <div id='app_land_grh_viw_intr_cont'>\r\n                                             <div className='app_land_grh_view_cont_2'>\r\n                                             <div  className='app_land_grh_view_cont_2_tit'>Clicks</div>\r\n                                             <canvas ref=\"canvas\" height='300' className='app_land_grh_viw'/>\r\n                                             </div>\r\n                                             \r\n                                             <div className='app_land_grh_view_cont_2'>\r\n                                             <div  className='app_land_grh_view_cont_2_tit'>New Visitors</div>\r\n                                             <canvas ref=\"canvas_vist\" height='300' className='app_land_grh_visit'/>\r\n                                             </div>\r\n\r\n                                             <div className='app_ana_sec_tit_cont'>\r\n                                   <div  className='app_ana_sec_tit'>Operating System Analytics</div>\r\n                                                  </div>\r\n                                             <div className='app_land_grh_thrd_main_cont'>\r\n                                             <         div className='app_land_grh_vist_city_con'>\r\n                                                       <div  className='app_land_grh_view_cont_2_tit'>Clicks by Browser</div>\r\n                                                       <canvas ref=\"canvas_visit_brow\" height='300' className='app_land_grh_visit_city'/>\r\n                                                       <div>\r\n                                                            {this.drawBrowLable()}\r\n                                                       </div>\r\n                                                       </div>\r\n                                                      \r\n                                                   \r\n                                                       <div className='app_land_grh_vist_os_con'>\r\n                                                       <div  className='app_land_grh_view_cont_2_tit'>Clicks by OS</div>\r\n                                                       <canvas ref=\"canvas_visit_os\" height='300' className='app_land_grh_visit_city'/>\r\n                                                       <div>\r\n                                                       <div>\r\n                                                            {this.drawOsLable()}\r\n                                                       </div>\r\n                                                       </div>\r\n                                                       </div>\r\n                                             </div>\r\n                                             <div className='app_land_grh_vist_os_con'>\r\n                                                       <div  className='app_land_grh_view_cont_2_tit'>Clicks by Language</div>\r\n                                                       <canvas ref=\"canvas_visit_lang\" height='300' className='app_land_grh_visit_city'/>\r\n                                                       <div>\r\n                                                       <div>\r\n                                                            {this.drawLangLable()}\r\n                                                       </div>\r\n                                                       </div>\r\n                                                       </div>\r\n                                             <div className='app_ana_sec_tit_cont'>\r\n                                   <div  className='app_ana_sec_tit'>Location Analytics</div>\r\n                                                  </div>\r\n\r\n                                             <div className='app_land_grh_thrd_main_cont'>\r\n                                                        \r\n                                                  <div className='app_land_grh_vist_city_con'>\r\n                                                       <div  className='app_land_grh_view_cont_2_tit'>Clicks by city</div>\r\n                                                       <canvas ref=\"canvas_visit_city\" height='300' className='app_land_grh_visit_city'/>\r\n                                                       </div>\r\n\r\n                                                       <div className='app_land_grh_vist_city_count'>\r\n                                                       <div  className='app_land_grh_view_cont_2_tit'>Clicks by Country</div>\r\n                                                       <table className='app_ana_tab_table'>\r\n                                                                 <tr id='app_land_tab_table_head_row'>\r\n                                                                 <th className='app_land_tab_table_head_row_tit'>Sr</th>\r\n                                                                 <th className='app_land_tab_table_head_row_tit'>Country</th>\r\n                                                                 <th className='app_land_tab_table_head_row_tit'>Visits</th>\r\n                                                                 </tr>\r\n                                                                      {this.state.countryList!==undefined?this.drawCountryTable():<span/>}                         \r\n                                                                 </table>\r\n                                                       </div>\r\n\r\n\r\n                                             </div>\r\n\r\n\r\n                                        </div>\r\n                              </Tab>\r\n                              \r\n                              <Tab eventKey=\"Details\" title=\"Details\" className=\"app_ana_tab_cont\">\r\n                                        <div  className='app_ana_gen_lnk_main_cont'>\r\n                                                  <div className='app_ana_gen_lnk_main_cont_full'>\r\n                                                       <svg className='app_ana_gen_lnk_main_cont_full_ico' viewBox='0 0 512 512'><title>Link</title><path d='M208 352h-64a96 96 0 010-192h64M304 160h64a96 96 0 010 192h-64M163.29 256h187.42' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='36'/></svg>\r\n                                                  <div  className='app_ana_gen_lnk_main_cont_tit'>\r\n                                                       https://localhost:8080/link/\r\n                                                  </div>\r\n                                                  <input className='app_ana_gen_lnk_main_cont_link_spcl_id_fld' type='text' value='ABDC' disabled></input>\r\n                                                  \r\n                                                  </div>\r\n                                                  <button className='app_land_tab_table_head_row_dat_lnk_copy_butt'>\r\n                                                       <svg className='app_land_tab_table_head_row_dat_lnk_copy_ico' viewBox='0 0 512 512'><title>Copy</title><rect x='128' y='128' width='336' height='336' rx='57' ry='57' fill='none' stroke='currentColor' stroke-linejoin='round' stroke-width='32'/><path d='M383.5 128l.5-24a56.16 56.16 0 00-56-56H112a64.19 64.19 0 00-64 64v216a56.16 56.16 0 0056 56h24' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='32'/></svg>\r\n                                                  </button>\r\n                                        </div>\r\n                                        <div className='app_ana_det_main_class'>\r\n                                             \r\n                                                  <div  className='app_ana_bas_det_main_class'>\r\n                                                  <div className='app_ana_bas_det_main_class_tit'>Link details</div>\r\n                                                       <div className='app_ana_bas_det_main_class_row'>\r\n                                                       <div className='app_ana_bas_det_main_class_dat_cont'>\r\n                                                                 <div className='app_ana_bas_det_main_class_dat_cont_tit'>Display name</div>\r\n                                                                 <input type='text' value='Example Link'className='app_ana_bas_det_main_class_dat_cont_inp' disabled></input>\r\n                                                       </div>\r\n                                                       <div className='app_ana_bas_det_main_class_dat_cont'>\r\n                                                                 <div className='app_ana_bas_det_main_class_dat_cont_tit'> Destination Path</div>\r\n                                                                 <input type='text' value='Example Link'className='app_ana_bas_det_main_class_dat_cont_inp' disabled></input>\r\n                                                       </div> \r\n                                                       </div> \r\n                                   \r\n                                                  </div>\r\n\r\n                                                  <div  className='app_ana_bas_det_main_class'>\r\n                                                  <div className='app_ana_bas_det_main_class_tit'>Api details</div>\r\n                                                       <div className='app_ana_bas_det_main_class_row'>\r\n                                                            <div className='app_ana_bas_det_main_class_dat_cont'>\r\n                                                                      <div className='app_ana_bas_det_main_class_dat_cont_tit'>Active status</div>\r\n                                                                      <input type='text' value='Example Link'className='app_ana_bas_det_main_class_dat_cont_inp' disabled></input>\r\n                                                            </div>\r\n                                                            <div className='app_ana_bas_det_main_class_dat_cont'>\r\n                                                                      <div className='app_ana_bas_det_main_class_dat_cont_tit'>Created On</div>\r\n                                                                      <input type='text' value='Example Link'className='app_ana_bas_det_main_class_dat_cont_inp' disabled></input>\r\n                                                            </div>\r\n                                                            \r\n                                                            </div> \r\n                                                       <div className='app_ana_bas_det_main_class_row'>\r\n                                                       <div className='app_ana_bas_det_main_class_dat_cont'>\r\n                                                                 <div className='app_ana_bas_det_main_class_dat_cont_tit'>Special Id</div>\r\n                                                                 <input type='text' value='Example Link'className='app_ana_bas_det_main_class_dat_cont_inp' disabled></input>\r\n                                                       </div>\r\n                                                       <div className='app_ana_bas_det_main_class_dat_cont'>\r\n                                                                 <div className='app_ana_bas_det_main_class_dat_cont_tit'>Analytic Id</div>\r\n                                                                 <input type='text' value='Example Link'className='app_ana_bas_det_main_class_dat_cont_inp' disabled></input>\r\n                                                       </div> \r\n                                                       </div> \r\n                                                       \r\n                                                  </div>\r\n                                                  \r\n                                        </div>\r\n                              </Tab>\r\n                              \r\n                         </Tabs>\r\n                                                       \r\n                         \r\n               \r\n                                  \r\n\r\n               </div>\r\n          </>)\r\n     }\r\n}",{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":4,"column":26,"nodeType":"171","messageId":"172","endLine":4,"endColumn":35},{"ruleId":"169","severity":1,"message":"173","line":9,"column":3,"nodeType":"171","messageId":"172","endLine":9,"endColumn":7},{"ruleId":"169","severity":1,"message":"174","line":14,"column":39,"nodeType":"171","messageId":"172","endLine":14,"endColumn":42},{"ruleId":"169","severity":1,"message":"175","line":14,"column":43,"nodeType":"171","messageId":"172","endLine":14,"endColumn":48},{"ruleId":"169","severity":1,"message":"176","line":14,"column":49,"nodeType":"171","messageId":"172","endLine":14,"endColumn":53},{"ruleId":"169","severity":1,"message":"177","line":17,"column":8,"nodeType":"171","messageId":"172","endLine":17,"endColumn":15},{"ruleId":"169","severity":1,"message":"178","line":27,"column":9,"nodeType":"171","messageId":"172","endLine":27,"endColumn":22},{"ruleId":"169","severity":1,"message":"179","line":30,"column":8,"nodeType":"171","messageId":"172","endLine":30,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":112,"column":74,"nodeType":"182","messageId":"183","endLine":112,"endColumn":75,"fix":"184"},{"ruleId":"169","severity":1,"message":"185","line":129,"column":15,"nodeType":"171","messageId":"172","endLine":129,"endColumn":24},{"ruleId":"169","severity":1,"message":"186","line":130,"column":15,"nodeType":"171","messageId":"172","endLine":130,"endColumn":27},{"ruleId":"169","severity":1,"message":"187","line":149,"column":13,"nodeType":"171","messageId":"172","endLine":149,"endColumn":18},{"ruleId":"169","severity":1,"message":"188","line":150,"column":13,"nodeType":"171","messageId":"172","endLine":150,"endColumn":17},{"ruleId":"169","severity":1,"message":"186","line":165,"column":13,"nodeType":"171","messageId":"172","endLine":165,"endColumn":25},{"ruleId":"169","severity":1,"message":"189","line":166,"column":13,"nodeType":"171","messageId":"172","endLine":166,"endColumn":18},{"ruleId":"169","severity":1,"message":"190","line":167,"column":13,"nodeType":"171","messageId":"172","endLine":167,"endColumn":23},{"ruleId":"169","severity":1,"message":"187","line":179,"column":15,"nodeType":"171","messageId":"172","endLine":179,"endColumn":20},{"ruleId":"169","severity":1,"message":"188","line":181,"column":13,"nodeType":"171","messageId":"172","endLine":181,"endColumn":17},{"ruleId":"169","severity":1,"message":"185","line":184,"column":13,"nodeType":"171","messageId":"172","endLine":184,"endColumn":22},{"ruleId":"169","severity":1,"message":"186","line":185,"column":13,"nodeType":"171","messageId":"172","endLine":185,"endColumn":25},{"ruleId":"169","severity":1,"message":"189","line":186,"column":13,"nodeType":"171","messageId":"172","endLine":186,"endColumn":18},{"ruleId":"169","severity":1,"message":"190","line":187,"column":13,"nodeType":"171","messageId":"172","endLine":187,"endColumn":23},{"ruleId":"169","severity":1,"message":"185","line":194,"column":11,"nodeType":"171","messageId":"172","endLine":194,"endColumn":20},{"ruleId":"169","severity":1,"message":"186","line":195,"column":11,"nodeType":"171","messageId":"172","endLine":195,"endColumn":23},{"ruleId":"169","severity":1,"message":"189","line":196,"column":11,"nodeType":"171","messageId":"172","endLine":196,"endColumn":16},{"ruleId":"169","severity":1,"message":"190","line":197,"column":11,"nodeType":"171","messageId":"172","endLine":197,"endColumn":21},{"ruleId":"169","severity":1,"message":"185","line":222,"column":15,"nodeType":"171","messageId":"172","endLine":222,"endColumn":24},{"ruleId":"169","severity":1,"message":"186","line":223,"column":15,"nodeType":"171","messageId":"172","endLine":223,"endColumn":27},{"ruleId":"169","severity":1,"message":"189","line":224,"column":15,"nodeType":"171","messageId":"172","endLine":224,"endColumn":20},{"ruleId":"169","severity":1,"message":"190","line":225,"column":15,"nodeType":"171","messageId":"172","endLine":225,"endColumn":25},{"ruleId":"191","severity":1,"message":"192","line":291,"column":39,"nodeType":"193","endLine":291,"endColumn":66},{"ruleId":"169","severity":1,"message":"194","line":354,"column":19,"nodeType":"171","messageId":"172","endLine":354,"endColumn":27},{"ruleId":"195","severity":1,"message":"196","line":382,"column":17,"nodeType":"197","messageId":"198","endLine":382,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":442,"column":35,"nodeType":"197","messageId":"198","endLine":442,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":593,"column":17,"nodeType":"193","endLine":593,"endColumn":66},{"ruleId":"169","severity":1,"message":"199","line":2,"column":17,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":2,"column":26,"nodeType":"171","messageId":"172","endLine":2,"endColumn":35},{"ruleId":"169","severity":1,"message":"200","line":3,"column":9,"nodeType":"171","messageId":"172","endLine":3,"endColumn":17},{"ruleId":"169","severity":1,"message":"201","line":3,"column":54,"nodeType":"171","messageId":"172","endLine":3,"endColumn":57},{"ruleId":"169","severity":1,"message":"202","line":3,"column":58,"nodeType":"171","messageId":"172","endLine":3,"endColumn":61},{"ruleId":"169","severity":1,"message":"203","line":3,"column":62,"nodeType":"171","messageId":"172","endLine":3,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":29,"column":22,"nodeType":"193","endLine":29,"endColumn":85},{"ruleId":"195","severity":1,"message":"196","line":123,"column":40,"nodeType":"197","messageId":"198","endLine":123,"endColumn":42},{"ruleId":"195","severity":1,"message":"196","line":258,"column":56,"nodeType":"197","messageId":"198","endLine":258,"endColumn":58},{"ruleId":"204","severity":1,"message":"205","line":260,"column":37,"nodeType":"193","endLine":260,"endColumn":83},{"ruleId":"195","severity":1,"message":"196","line":316,"column":76,"nodeType":"197","messageId":"198","endLine":316,"endColumn":78},{"ruleId":"195","severity":1,"message":"196","line":337,"column":63,"nodeType":"197","messageId":"198","endLine":337,"endColumn":65},{"ruleId":"204","severity":1,"message":"205","line":339,"column":37,"nodeType":"193","endLine":339,"endColumn":83},{"ruleId":"169","severity":1,"message":"206","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"199","line":2,"column":17,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":2,"column":26,"nodeType":"171","messageId":"172","endLine":2,"endColumn":35},{"ruleId":"169","severity":1,"message":"199","line":2,"column":17,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":2,"column":26,"nodeType":"171","messageId":"172","endLine":2,"endColumn":35},{"ruleId":"169","severity":1,"message":"174","line":3,"column":39,"nodeType":"171","messageId":"172","endLine":3,"endColumn":42},{"ruleId":"169","severity":1,"message":"176","line":3,"column":49,"nodeType":"171","messageId":"172","endLine":3,"endColumn":53},{"ruleId":"169","severity":1,"message":"207","line":3,"column":54,"nodeType":"171","messageId":"172","endLine":3,"endColumn":63},{"ruleId":"169","severity":1,"message":"208","line":3,"column":64,"nodeType":"171","messageId":"172","endLine":3,"endColumn":68},{"ruleId":"169","severity":1,"message":"209","line":3,"column":69,"nodeType":"171","messageId":"172","endLine":3,"endColumn":87},{"ruleId":"169","severity":1,"message":"210","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":13},{"ruleId":"211","severity":1,"message":"212","line":156,"column":16,"nodeType":"213","messageId":"198","endLine":156,"endColumn":28},{"ruleId":"195","severity":1,"message":"196","line":161,"column":38,"nodeType":"197","messageId":"198","endLine":161,"endColumn":40},{"ruleId":"195","severity":1,"message":"196","line":166,"column":38,"nodeType":"197","messageId":"198","endLine":166,"endColumn":40},{"ruleId":"169","severity":1,"message":"214","line":338,"column":15,"nodeType":"171","messageId":"172","endLine":338,"endColumn":18},{"ruleId":"169","severity":1,"message":"214","line":368,"column":10,"nodeType":"171","messageId":"172","endLine":368,"endColumn":13},{"ruleId":"169","severity":1,"message":"214","line":404,"column":10,"nodeType":"171","messageId":"172","endLine":404,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":466,"column":11,"nodeType":"193","endLine":466,"endColumn":82},{"ruleId":"195","severity":1,"message":"196","line":496,"column":56,"nodeType":"197","messageId":"198","endLine":496,"endColumn":58},{"ruleId":"204","severity":1,"message":"205","line":605,"column":36,"nodeType":"193","endLine":605,"endColumn":108},{"ruleId":"169","severity":1,"message":"206","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"199","line":2,"column":17,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":2,"column":26,"nodeType":"171","messageId":"172","endLine":2,"endColumn":35},{"ruleId":"169","severity":1,"message":"200","line":3,"column":9,"nodeType":"171","messageId":"172","endLine":3,"endColumn":17},{"ruleId":"169","severity":1,"message":"215","line":3,"column":18,"nodeType":"171","messageId":"172","endLine":3,"endColumn":24},{"ruleId":"169","severity":1,"message":"216","line":3,"column":25,"nodeType":"171","messageId":"172","endLine":3,"endColumn":30},{"ruleId":"169","severity":1,"message":"217","line":3,"column":31,"nodeType":"171","messageId":"172","endLine":3,"endColumn":38},{"ruleId":"169","severity":1,"message":"174","line":3,"column":39,"nodeType":"171","messageId":"172","endLine":3,"endColumn":42},{"ruleId":"169","severity":1,"message":"175","line":3,"column":43,"nodeType":"171","messageId":"172","endLine":3,"endColumn":48},{"ruleId":"169","severity":1,"message":"176","line":3,"column":49,"nodeType":"171","messageId":"172","endLine":3,"endColumn":53},{"ruleId":"169","severity":1,"message":"218","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":10},{"ruleId":"169","severity":1,"message":"206","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"199","line":2,"column":17,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":2,"column":26,"nodeType":"171","messageId":"172","endLine":2,"endColumn":35},{"ruleId":"169","severity":1,"message":"219","line":2,"column":36,"nodeType":"171","messageId":"172","endLine":2,"endColumn":45},{"ruleId":"169","severity":1,"message":"216","line":3,"column":25,"nodeType":"171","messageId":"172","endLine":3,"endColumn":30},{"ruleId":"169","severity":1,"message":"217","line":3,"column":31,"nodeType":"171","messageId":"172","endLine":3,"endColumn":38},{"ruleId":"169","severity":1,"message":"175","line":3,"column":43,"nodeType":"171","messageId":"172","endLine":3,"endColumn":48},{"ruleId":"169","severity":1,"message":"207","line":3,"column":69,"nodeType":"171","messageId":"172","endLine":3,"endColumn":78},{"ruleId":"169","severity":1,"message":"208","line":3,"column":79,"nodeType":"171","messageId":"172","endLine":3,"endColumn":83},{"ruleId":"169","severity":1,"message":"209","line":3,"column":84,"nodeType":"171","messageId":"172","endLine":3,"endColumn":102},{"ruleId":"169","severity":1,"message":"201","line":3,"column":103,"nodeType":"171","messageId":"172","endLine":3,"endColumn":106},{"ruleId":"169","severity":1,"message":"203","line":3,"column":107,"nodeType":"171","messageId":"172","endLine":3,"endColumn":110},{"ruleId":"169","severity":1,"message":"202","line":3,"column":111,"nodeType":"171","messageId":"172","endLine":3,"endColumn":114},{"ruleId":"169","severity":1,"message":"218","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":10},{"ruleId":"220","severity":1,"message":"221","line":91,"column":21,"nodeType":"222","messageId":"223","endLine":91,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":95,"column":21,"nodeType":"222","messageId":"223","endLine":95,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":99,"column":21,"nodeType":"222","messageId":"223","endLine":99,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":103,"column":21,"nodeType":"222","messageId":"223","endLine":103,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":107,"column":21,"nodeType":"222","messageId":"223","endLine":107,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":116,"column":21,"nodeType":"222","messageId":"223","endLine":116,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":120,"column":21,"nodeType":"222","messageId":"223","endLine":120,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":124,"column":21,"nodeType":"222","messageId":"223","endLine":124,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":128,"column":21,"nodeType":"222","messageId":"223","endLine":128,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":132,"column":21,"nodeType":"222","messageId":"223","endLine":132,"endColumn":27},{"ruleId":"224","severity":1,"message":"225","line":146,"column":23,"nodeType":"226","messageId":"227","endLine":146,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":258,"column":21,"nodeType":"222","messageId":"223","endLine":258,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":262,"column":21,"nodeType":"222","messageId":"223","endLine":262,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":267,"column":21,"nodeType":"222","messageId":"223","endLine":267,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":272,"column":21,"nodeType":"222","messageId":"223","endLine":272,"endColumn":27},{"ruleId":"169","severity":1,"message":"228","line":322,"column":15,"nodeType":"171","messageId":"172","endLine":322,"endColumn":22},{"ruleId":"169","severity":1,"message":"229","line":435,"column":15,"nodeType":"171","messageId":"172","endLine":435,"endColumn":21},{"ruleId":"169","severity":1,"message":"228","line":436,"column":15,"nodeType":"171","messageId":"172","endLine":436,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":517,"column":35,"nodeType":"171","messageId":"232","endLine":517,"endColumn":36},{"ruleId":"169","severity":1,"message":"228","line":532,"column":15,"nodeType":"171","messageId":"172","endLine":532,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":604,"column":35,"nodeType":"171","messageId":"232","endLine":604,"endColumn":36},{"ruleId":"169","severity":1,"message":"228","line":622,"column":15,"nodeType":"171","messageId":"172","endLine":622,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":687,"column":35,"nodeType":"171","messageId":"232","endLine":687,"endColumn":36},{"ruleId":"169","severity":1,"message":"228","line":705,"column":15,"nodeType":"171","messageId":"172","endLine":705,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":771,"column":35,"nodeType":"171","messageId":"232","endLine":771,"endColumn":36},{"ruleId":"169","severity":1,"message":"228","line":788,"column":15,"nodeType":"171","messageId":"172","endLine":788,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":881,"column":35,"nodeType":"171","messageId":"232","endLine":881,"endColumn":36},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Tab' is defined but never used.","'Modal' is defined but never used.","'Tabs' is defined but never used.","'AddLink' is defined but never used.","'ThemeProvider' is defined but never used.","'Notification' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"235","text":"236"},"'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'user' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setValue' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","'Nav' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'axios' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'useAccordionToggle' is defined but never used.","'Chart' is defined but never used.","no-dupe-keys","Duplicate key 'new_link_err'.","ObjectExpression","'res' is assigned a value but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'Spinner' is defined but never used.","'qs' is defined but never used.","'useParams' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'myChart' is assigned a value but never used.","'xTitle' is assigned a value but never used.","no-redeclare","'n' is already defined.","redeclared","no-global-assign","no-unsafe-negation",[2910,2920],"\n        ."]